# (c) 2017 DataNexus Inc.  All Rights Reserved
---
# If we're building a cluster in an OpenStack environment, then use the
# `openstack.py` command to gather the dynamic inventory information that we
# need to build our application host groups
- block:
  # first run the `openstack.py` command to gather the inventory information
  - name: Run openstack command to gather inventory information
    shell: "{{role_path}}/utils/openstack.py --list"
    register: os_inventory_output
    run_once: true
  - set_fact:
      os_inventory_json: "{{os_inventory_output.stdout | from_json}}"
  # then build lists of matching nodes based on the defined cloud, tenant, project
  # dataflow, domain, and cluster
  - set_fact:
      cloud_nodes: "{{(os_inventory_json | json_query('[\"meta-Cloud_' + cloud + '\"]')).0}}"
      tenant_nodes: "{{(os_inventory_json | json_query('[\"meta-Tenant_' + tenant + '\"]')).0}}"
      project_nodes: "{{(os_inventory_json | json_query('[\"meta-Project_' + project + '\"]')).0}}"
      dataflow_nodes: "{{(os_inventory_json | json_query('[\"meta-Dataflow_' + (dataflow | default('none')) + '\"]')).0}}"
      domain_nodes: "{{(os_inventory_json | json_query('[\"meta-Domain_' + domain + '\"]')).0}}"
      cluster_nodes: "{{(os_inventory_json | json_query('[\"meta-Cluster_' + (cluster | default('a')) + '\"]')).0}}"
  # and, finally, loop through the host_group_list, building each host group
  # (in turn) from the lists of nodes we just constructed
  - include_tasks: ../files/build_osp_host_groups.yml
    with_items: "{{host_group_list}}"
    loop_control:
      loop_var: host_group_item
  when: cloud == "osp"
# If we're building a cluster in an AWS environtment, then loop through the
# host_group_list, building each host group (in turn)
- include_tasks: ../files/build_aws_host_groups.yml
  with_items: "{{host_group_list}}"
  loop_control:
    loop_var: host_group_item
  when: cloud == 'aws'
